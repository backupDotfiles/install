#! /usr/bin/env bash

# [[ $# = "1" ]] && [[ $1 = "-g" ]] && pacman -Q | cut -f 1 -d " " > pkg.list
# [[ $# = "1" ]] && [[ $1 = "-i" ]] && sudo pacman -S $(cat pkg.list)
# [[ $# = "1" ]] && [[ $1 = "-h" ]] && echo -e "-g  set packages in pkg.list\n-i  install packages from pkg.list"

# General variables
H="$HOME"
C="$HOME/.config"
D="$HOME/.local"
P="sudo pacman"
SB="#!/usr/bin/env bash"

# Font variables
FONTFAMILY="JetBrainsMono Nerd Font"

# Colors variables
BACKGROUND="#24283b"
FOREGROUND="#c0caf5"
BLACK="#1d202f"
RED="#f7768e"
GREEN="#9ece6a"
YELLOW="#e0af68"
BLUE="#7aa2f7"
MAGENTA="#bb9af7"
CYAN="#7dcfff"
WHITE="#a9b1d6"
ALTBLACK="#414868"
ALTRED="#f7768e"
ALTGREEN="#9ece6a"
ALTYELLOW="#e0af68"
ALTBLUE="#7aa2f7"
ALTMAGENTA="#bb9af7"
ALTCYAN="#7dcfff"
ALTWHITE="#c0caf5"

# Create home folders
create_folders() {
	folders=("Downloads" "Pictures" "Music")
	for f in "${folders[@]}"
	do
		mkdir -p "$H/$f"
	done
}

update_install() {
	pkg=("neovim bspwm sxhkd alacritty picom rofi polybar dunst zsh xorg-xsetroot firefox adwaita-icon-theme curl wget xwallpaper inetutils")
	$P -Syu
	echo "y" | $P -S $pkg
}

set_dotzprofile() {
	cat > "$H/.zprofile" <<- _EOF_
export PATH=/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:\$HOME/.local/bin
export XDG_CONFIG_HOME="\$HOME/.config"
export XDG_DATA_HOME="\$HOME/.local/share"
export XDG_CACHE_HOME="\$HOME/.cache"
export XAUTHORITY="\$XDG_DATA_HOME/xorg/Xauthority"
export ZDOTDIR="\$XDG_CONFIG_HOME/zsh"
export EDITOR="nvim"
export VISUAL="nvim"

#[[ -f \$HOME/.bashrc ]] && . \$HOME/.bashrc

[[ "\$(tty)" = "/dev/tty1" ]] && startx \$XDG_CONFIG_HOME/x/xinitrc
	_EOF_
}

set_xinitrc() {
	mkdir -p "$C/x"
	cat > "$C/x/xinitrc" <<- _EOF_
$SB

exec bspwm
	_EOF_
}

set_alacritty() {
	mkdir -p "$C/alacritty"
	cat > "$C/alacritty/alacritty.yml" <<- _EOF_
window:
  padding:
    x: 5
    y: 5
  opacity: 1.0

scrolling:
  history: 10000

cursor:
  style:
    shape: Block
    blinking: On

font:
  normal:
    family: $FONTFAMILY
    style:  Regular
  bold:
    family: $FONTFAMILY
    style:  Bold
  italic:
    family: $FONTFAMILY
    style:  Italic
  size:     10.0

colors:
  primary:
    background: "$BACKGROUND"
    foreground: "$FOREGROUND"
  normal:
    black:      "$BLACK"
    red:        "$RED"
    green:      "$GREEN"
    yellow:     "$YELLOW"
    blue:       "$BLUE"
    magenta:    "$MAGENTA"
    cyan:       "$CYAN"
    white:      "$WHITE"
  bright:
    black:      "$ALTBLACK"
    red:        "$ALTRED"
    green:      "$ALTGREEN"
    yellow:     "$ALTYELLOW"
    blue:       "$ALTBLUE"
    magenta:    "$ALTMAGENTA"
    cyan:       "$ALTCYAN"
    white:      "$ALTWHITE"
	_EOF_
}

set_bspwm() {
	mkdir -p "$C/bspwm"
	cat > "$C/bspwm/bspwmrc" <<- _EOF_
$SB

# Workspaces
name=1
for m in \`bspc query -M --names\`;do
  bspc monitor \$m -d "" ""
  let name++
done

# Config
bspc config border_width          1
bspc config window_gap            8
bspc config split_ratio           0.50
bspc config borderless_monocle    true
bspc config gapless_monocle       true
bspc config focused_border_color  "$FOREGROUND"
bspc config normal_border_color   "$BACKGROUND"

# Rules
bspc rule -a Alacritty desktop="^1" follow=on focus=on
bspc rule -a firefox desktop="^2" follow=on focus=on

# Autostart
killall -q picom bspc sxhkd polybar
picom -f &
sxhkd &
polybar -q top &
xsetroot -cursor_name left_ptr
xwallpaper --zoom \$HOME/Pictures/blue-anime-girl.jpg
	_EOF_
	chmod +x "$C/bspwm/bspwmrc"
}

set_sxhkd() {
	mkdir -p "$C/sxhkd"
	cat > "$C/sxhkd/sxhkdrc" <<- _EOF_
# Terminal
super + Return
  alacritty

# Launcher
super + @space
  rofi -show drun

# Quit and restart bspwm
super + alt + {q,r}
  bspc {quit,wm -r}

# Reload sxhkd
super + Escape
  pkill -USR1 -x sxhkd

# Close window
super + {_,shift + }w
  bspc node -{c,k}

# Alternate tiled and monocle
super + m
  bspc desktop -l next

# Focus window
super + {_,shift + }{h,j,k,l}
  bspc node -{f,s} {west,south,north,east}

# Focus or send to workspace
super + {_,shift + }{1-9,0}
  bspc {desktop -f, node -d} '^{1-9,10}'

# Expand window
super + alt + {h,j,k,l}
  bspc node -z {left -20 0,bottom 0 20, top 0 -20,right 20 0}

# Contract window
super + alt + shift + {h,j,k,l}
  bspc node -z {right -20 0,top 0 20, bottom 0 -20,left 20 0}
	_EOF_
}

set_polybar() {
	mkdir -p "$C/polybar"
	cat > "$C/polybar/config.ini" <<- _EOF_
[bar/top]
width =                    100%
heigth =                   24pt
radius =                   0
padding =                  1
background =               $BACKGROUND
foreground =               $FOREGROUND
font-0 =                   $FONTFAMILY:style=Regular:pixelsize=14;2
module-margin =            1
modules-left =             bspwm window
modules-right =            cpu memory eth wlan date
cursor-click =             pointer
wm-restack =               bspwm

[module/bspwm]
type =                     internal/xworkspaces
label-active =             %name%
label-active-padding =     1
label-active-foreground =  $BLUE
label-occupied =           %name%
label-occupied-padding =   1
label-empty =              %name%
label-empty-padding =      1
label-empty-foreground =   $FOREGROUND

[module/window]
type =                     internal/xwindow
label =                    %title:0:40:...%

[module/cpu]
type =                     internal/cpu
interval =                 2
format-prefix =            " "
format-prefix-foreground = $FOREGROUND
label =                    %percentage:2%%

[module/memory]
type =                     internal/memory
interval =                 2
format-prefix =            " "
format-prefix-foreground = $FOREGROUND
label =                    %percentage_used:2%%

[network-base]
type =                     internal/network
interval =                 5
format-connected =         <label-connected>
format-disconnected =      <label-disconnected>
label-disconnected =       %ifname% off

[module/eth]
inherit =                  network-base
interface-type =           wired
label-connected =          %ifname%

[module/wlan]
inherit =                  network-base
interface-type =           wireless
label-connected =          %ifname%

[module/date]
type =                     internal/date
interval =                 1
date =                     %b %d %I:%M %p
label =                    %date%
label-foreground =         $FOREGROUND

[settings]
screenchange-reload =      true
pseudo-transparency =      true
	_EOF_
}

#set_dunst() {}

set_rofi() {
	mkdir -p "$C/rofi"
	cat > "$C/rofi/config.rasi" <<- _EOF_
configuration {
  display-drun: "Run";
  drun-display-format: "{icon} {name}";
  font: "$FONTFAMILY Regular 10";
  modi: "drun";
  show-icons: true;
}

@theme "theme.rasi"
	_EOF_
	
	cat > "$C/rofi/theme.rasi" <<- _EOF_
* {
  background-color: $BACKGROUND;
  border: 0;
  margin: 0;
  padding: 0;
  spacing: 0;
}

window {
  width: 45%;
  border: 1;
  border-color: $FOREGROUND;
}

element {
  padding: 8 0;
  text-color: $FOREGROUND;
}

element selected {
  background-color: $FOREGROUND;
  text-color: $BACKGROUND;
}

element-text {
  background-color: inherit;
  text-color: inherit;
  vertical-align: 0.5;
}

element-icon {
  padding: 0 4;
  size: 30;
}

element-icon selected {
  background-color: $FOREGROUND;
}

entry {
  background-color: $BLACK;
  padding: 12;
  text-color: $FOREGROUND;
}

inputbar {
  children: [prompt, entry];
}

listview {
  background-color: $BACKGROUND;
  padding: 8 12;
  columns: 1;
  lines: 8;
}

mainbox {
  background-color: $BACKGROUND;
  children: [inputbar, listview];
}

prompt {
  background-color: $BLACK;
  enabled: true;
  padding: 12 0 0 12;
  text-color: $FOREGROUND;
}
	_EOF_
}

set_zsh() {
	mkdir -p "$C/zsh"
	if [[ $SHELL != "/usr/bin/zsh" ]]; then
		chsh -s /usr/bin/zsh
	fi
	rm -rf .bashrc .bash_logout .bash_history .bash_profile
	cat > "$C/zsh/.zshrc" <<- _EOF_
# If not running interactively, don't do anything
[[ \$- != *i* ]] && return

# Lines configured by zsh-newuser-install
HISTFILE=\$XDG_CACHE_HOME/zsh/histfile
HISTSIZE=1000
SAVEHIST=1000

# End of lines configured by zsh-newuser-install
# The following lines were added by compinstall
zstyle :compinstall filename "\$XDG_CONFIG_HOME/zsh/.zshrc"

autoload -Uz compinit
compinit
# End of lines added by compinstall

PROMPT="%~ > "

alias ls="ls --color=auto"
alias la="ls -A"
alias ll="ls -alF"
	_EOF_
}

#set_nvim() {}

download_fonts() {
	mkdir -p "$D/share/fonts/nerd/jetbrains"
	weights=("Regular" "Bold" "Italic")
	for w in "${weights[@]}"
	do
		wget --output-document="$D/share/fonts/nerd/jetbrains/$w.ttf" "https://github.com/ryanoasis/nerd-fonts/raw/master/patched-fonts/JetBrainsMono/Ligatures/$w/complete/JetBrains%20Mono%20$w%20Nerd%20Font%20Complete.ttf"
	done
	rm -rf "$H/.wget-hsts"
}

download_bg() {
	wget --output-document="$H/Pictures/blue-anime-girl.jpg" "https://wallpapercave.com/wp/wp2301619.jpg"
}

main() {
	#create_folders
	#update_install
	set_dotzprofile
	set_xinitrc
	set_alacritty
	set_bspwm
	set_sxhkd
	set_polybar
	set_rofi
	set_zsh
	# download_fonts
	# download_bg
}

main
